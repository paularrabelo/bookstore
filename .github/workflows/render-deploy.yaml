name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        poetry-version: [2.0]
    
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2  

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}  

      - name: Instalar Poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry==${{ matrix.poetry-version }}  

      - name: Verificar instalação do Poetry
        run: poetry --help  

      - name: Instalar dependências
        run: poetry install  

      - name: Configurar banco de dados para testes
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/testdb
        run: |
          echo "DATABASE_URL=$DATABASE_URL" >> .env

      - name: Aplicar migrações
        run: poetry run python manage.py migrate  

      - name: Executar testes
        run: poetry run python manage.py test  

  deploy:
    name: Deploy
    needs: [build]  
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install Render CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/render-oss/cli/refs/heads/main/bin/install.sh | sh

      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          CI: true
        run: |
          render deploys create ${{ secrets.RENDER_SERVICE_ID }} --output yaml --confirm