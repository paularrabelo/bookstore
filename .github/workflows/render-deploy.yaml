name: Python application

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        poetry-version: [2.0]
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2  

    - name: Configurar Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}  

    - name: Instalar Poetry ${{ matrix.poetry-version }}
      run: |
        python -m ensurepip
        python -m pip install --upgrade pip
        python -m pip install poetry==${{ matrix.poetry-version }}  # Instala a versão do Poetry definida na matriz

    - name: Verificar instalação do Poetry
      run: poetry --help  
    - name: Instalar dependências
      run: poetry install  
    - name: Executar testes
      run: poetry run python manage.py test  

    - name: Executar migrações
      run: poetry run python manage.py migrate  
      env:
        SQL_HOST: ${{ secrets.SQL_HOST }}  
        SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_USER: ${{ secrets.SQL_USER }}

  deploy:
    name: Deploy
    needs: [build]  
    runs-on: ubuntu-latest

    steps:
      - name: Deploy para produção
        uses: render-actions/deploy@v1
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}  
          api-key: ${{ secrets.RENDER_API_KEY }}  