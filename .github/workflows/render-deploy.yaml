name: Render deploy

on: [push]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.12]
        poetry-version: [2.0]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configurar Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Instalar Poetry ${{ matrix.poetry-version }}
        run: |
          python -m ensurepip
          python -m pip install --upgrade pip
          python -m pip install poetry==${{ matrix.poetry-version }}

      - name: Verificar instalação do Poetry
        run: poetry --help

      - name: Instalar dependências
        run: poetry install

      - name: Executar testes
        run: python manage.py test

      - name: Executar migrações
        run: python manage.py migrate
        env:
          SQL_HOST: ${{ secrets.SQL_HOST }}
          SQL_PASSWORD: ${{ secrets.SQL_PASSWORD }}
          SQL_USER: ${{ secrets.SQL_USER }}

  deploy:
    name: Deploy
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Deploy para produção
        uses: johnbeynon/render-deploy-action@v0.0.8
        with:
          service-id: ${{ secrets.RENDER_SERVICE_ID }}
          api-key: ${{ secrets.RENDER_API_KEY }}

      - name: Executar migrações após o deploy
        run: |
          curl -X POST https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys \
          -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
          -H "Content-Type: application/json" \
          -d '{
            "clearCache": "do_not_clear",
            "commit": "${{ github.sha }}",
            "command": "python manage.py migrate"
          }'